myApp.controller('DataBaseCtrl',['$scope','$http','$routeParams','$location','$utils','$postgres',function($scope,$http,$routeParams,$location,$utils,$postgres){$scope.user = {'email': '' , 'type' : ''} ;$scope.action={'modal':'slds-slide-up-close slds-backdrop--close','edit':'slds-slide-up-close slds-backdrop--close','download':'slds-slide-up-close slds-backdrop--close'};$scope.setting={'name':'','value':''};$scope.template_fields=['name'];$scope.Test={'TestRailServer':'','Project':'','Suit':'','Section':[],'specPath':''};$scope.tesrail={'username':'','serviceurl':''};$scope.entities={'salesforce':[],'testrail':[],'jenkins':[],'scheduledTemplates':[],'TestRailServer':[],'Project':[],'Suit':[],'Section':[],'Users':[],'settings':[]};$scope.jenkins={'name':'','username':'','password':'','url':'','browser':[],'os':'Windows'};$scope.salesforce={'name':'','parameters':'','env_type':''};$scope.type=['Admin','Other User'];$scope.jenkinsDetails={'browserDetails':{'Windows':['chrome','firefox'],'Mac':['chrome','safari']},'OS':'Windows','browser':[]};$postgres.getAllRecords('environments').then(function(result){$scope.entities['salesforce']=result;});$postgres.getAllRecords('getServers'+'/testrail').then(function(response){$scope.entities['TestRailServer']=response;$scope.Test['TestRailServer']=response[0];$postgres.getAllRecords('getTestRail/'+$scope.Test['TestRailServer']).then(function(response){$scope.getTestRailData('','Project');});});$postgres.getAllRecords('scheduledTemplates').then(function(result){$scope.entities['scheduledTemplates']=result;});$postgres.getAllRecords('users').then(function(result){console.log(result);$scope.entities['Users']=result; $scope.columns = Object.keys($scope.entities['Users'][0]);});$postgres.getRecord('credentials','testrail/edit').then(function(result){$scope.entities['testrail']=result;});$scope.getTestRailData=function(dataToGet,item,id){$http.get(window.location.origin+'/getTestRailData/'+dataToGet+'&'+item+'&'+id).then(function(response){$scope.entities[item]=[];if(item=='Section')
    $scope.entities[item]=response['data']['output'];else
    for(result in response['data']['output'])
        $scope.entities[item].push(response['data']['output'][result]['name']+'-'+response['data']['output'][result]['id']);});}
    $scope.$watch("Test.TestRailServer",function(newValue,oldValue){if(newValue)
        $scope.getTestRailData($scope.Test['TestRailServer'],'Project');},true);$scope.$watch("Test.Project",function(newValue,oldValue){console.log(newValue.split('-'));if(newValue){newVal=newValue.split('-')
        $scope.getTestRailData(newVal[newVal.length-1],'Suit',newVal[newVal.length-1]);}},true);$scope.$watch("Test.Suit",function(newValue,oldValue){if(newValue){newVal=newValue.split('-');$scope.getTestRailData(newVal[newVal.length-1],'Section',$scope.Test['Project'].split('-')[$scope.Test['Project'].split('-').length-1]);}},true);$postgres.getAllRecords('jenkins_servers').then(function(result){$scope.entities['jenkins']=result;});$postgres.getAllRecords('settings').then(function(result){$scope.entities['settings']=result;});$scope.generateSpec=function(){$utils.showProcessing();$postgres.insertRecord('generateSpec',$scope.Test,false).then(function(response){$utils.hideProcessing();$utils.showSuccess("Spec Generated successfully !");console.log(response);$scope.generatedSpec=response;$scope.action['download']='slds-slide-up-open slds-backdrop--open';});}
    $scope.selectFolder=function(e){$scope.Test['specPath']=e.target.files[0].webkitRelativePath;}
    $scope.add=function(instance){$scope.entities[instance[2]]=$postgres.insertRecord('environments',$scope.salesforce,$scope.salesforce.hasOwnProperty("id"));$scope.entities[instance[2]].then(function(result){$scope.entities[instance[2]]=result;});$scope.action['modal']='slds-slide-up-close slds-backdrop--close';}
    $scope.addSetting=function(name,value){  try{console.log(JSON.parse(value));$scope.entities['settings']=$postgres.insertRecord('settings',{'name':name,'value':value},$scope.setting.hasOwnProperty("id"));$scope.entities['settings'].then(function(result){$scope.entities['settings']=result;});$scope.action['modal']='slds-slide-up-close slds-backdrop--close';}catch(Exp){ $utils.showError('Invalid Value')}}
    $scope.addJenkins=function(){console.log($scope.jenkins);$postgres.insertRecord('jenkins_servers',$scope.jenkins,$scope.jenkins.hasOwnProperty("id")).then(function(response){$scope.action['modal']='slds-slide-up-close slds-backdrop--close';$scope.entities['jenkins']=response;});}
    $scope.addUser=function(user){ $postgres.insertRecord('users',$scope.user,$scope.user.hasOwnProperty("id")).then(function(response){$scope.action['modal']='slds-slide-up-close slds-backdrop--close';$scope.entities['Users']=response; $scope.columns = Object.keys($scope.entities['Users'][0]); });}
    $scope.deleteUser = function(id){$postgres.deleteRecord('users',id).then(function(response){$scope.entities['Users']=response; $scope.columns = Object.keys($scope.entities['Users'][0]);})}
    $scope.editUser = function(id){$postgres.getRecord('users',id).then(function(response){$scope.user['email']=response['email']; response['admin'] ? $scope.user['type'] = 'Admin' : $scope.user['type'] = 'Other User' ;$scope.action['modal']='slds-slide-up-open slds-backdrop--open';})}
    $scope.pauseScheduledJob = function(job){$utils.showProcessing();$postgres.getAllRecords('pauseJob/'+job).then(function(result){$utils.hideProcessing();console.log(result);if(result == '')
        $utils.showError('Host is not reachable');else{$utils.showSuccess('Job paused successfully !');$scope.entities['scheduledTemplates'] = result;}});}
    $scope.addTestRailUser = function(testrail){$postgres.insertRecord('users',$scope.testrail,$scope.tesrail.hasOwnProperty("id")).then(function(response){});}}]);

